package com.cbmu.covidmap;

import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Sort;
import org.springframework.format.annotation.DateTimeFormat;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;

import java.util.Date;
import java.util.List;

@Slf4j
@Controller // This means that this class is a Controller
@CrossOrigin(origins = "*")
@RequestMapping(path="/cali-counts") // This means URL's start with /demo (after Application path)
public class CaliHistoricalFacilityCountsController {
    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private CaliHistoricalFacilityCountsRepository caliHistoricalFacilityCountsRepository;

    @GetMapping(path = "/all")
    public @ResponseBody
    Iterable<CaliHistoricalFacilityCounts> getAllNationalCounts() {
        // This returns a JSON or XML with the users
        return caliHistoricalFacilityCountsRepository.findAll();
    }

    @GetMapping(path = "/date/{date}")
    public @ResponseBody Iterable<CaliHistoricalFacilityCounts> getAllByDate(
            @DateTimeFormat(pattern = "yyyy-MM-dd'T'hh:mm:ssZ") @PathVariable Date date) {
        List<CaliHistoricalFacilityCounts> counts = caliHistoricalFacilityCountsRepository.findAllByDate(date);

        if (! counts.isEmpty()) {
            return counts;
        }

        Sort sort = Sort.by(Sort.Direction.DESC, "date");
        List<DateOnly> dates = caliHistoricalFacilityCountsRepository.findAllByDateBefore(date, sort);

        if (dates.isEmpty()) {
            return counts;
        }

        date = dates.get(0).getDate();
        return caliHistoricalFacilityCountsRepository.findAllByDate(date);
    }
}
